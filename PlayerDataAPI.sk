# DATABASE CONNECTION
function DbConnect(string: text, dbname: text, dbcname: text):
	set {PDAPI::DbServer} to mongo server with connection string "%{_string}%"
	set {PDAPI::Db} to mongo database named "%{_dbname}%" of {PDAPI::DbServer}
	set {PDAPI::DbCollection} to mongo collection named "%{_dbcname}%" of {PDAPI::Db}
	send "&c&lPDAPI DEBUG &7Connected to &eSERVER: %{PDAPI::DbServer}%&7, &eDATABASE NAME: %{PDAPI::Db}%&7, &eCOLLECTION: %{PDAPI::DbCollection}%" to console if {PDAPI::Debug} is true

# GET PLAYER DATA
function GetPlayerData(p: player, dataset: text, mode: text) :: text:
	if {_mode} is "performance":
		if tps is smaller than 14:
			return "&8(&cSERVER_PERFORMANCE_TOO_BAD&8)"
			stop
	set {_doc} to first mongo document with mongosk filter where field "Uuid" is uuid of {_p} of collection {PDAPI::DbCollection}
	set {_data} to mongo value "%{_dataSet}%" of {_doc}
	return "%{_data}%"

# UPLOAD PLAYER DATA
function UploadPlayerData(p: player, dataset: text, value: text, mode: text):
	if {_mode} is "performance":
		if tps is smaller than 14:
			stop
	set {_doc} to first mongo document with mongosk filter where field "Uuid" is uuid of {_p} of collection {PDAPI::DbCollection}
	set mongo value "%{_dataset}%" of {_doc} to "%{_value}%"
	update mongo document {_doc} of {PDAPI::DbCollection}

# LOAD PLAYER DOCUMENT
function LoadPlayerDocument(p: player):
	set {_uuid} to uuid of {_p}
	set {_doc} to first mongo document with mongosk filter where field "Uuid" is uuid of {_p} of collection {PDAPI::DbCollection}
	if {_doc} is not set:
		CreatePlayerDocument({_p})
	else:
		SavePlayerDataLocal({_p})

# SAVE PLAYER DATA LOCAL
function SavePlayerDataLocal(p: player):
	stop

# CREATE NEW PLAYER DOCUMENT
function CreatePlayerDocument(p: player):
	if {_mode} is "performance":
		if tps is smaller than 14:
			stop
	set {_doc} to a new mongo document
	set mongo value "Uuid" of {_doc} to {_uuid}
	insert mongo document {_doc} in {PDAPI::DbCollection}
	send "&c&lPDAPI DEBUG &7Created a new player database document for %{_p}% in &eDATABASE: %{PDAPI::Db}%&7, &eDATABASE COLLECTION%{PDAPI::DbCollection}%" to console if {PDAPI::Debug} is true

# COMMANDS
command /playerdataapi:playerdataapi [<text>]:
	aliases: playerdataapi, playerdata, pd, pda, pdapi
	trigger:
		if arg 1 is not set:
			send "&c▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ &c&lPlayerData API&c ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
			send "&f"
			send " &8➳ &e/Pdapi &8, &7To show this messages."
			send formatted "<tooltip:showing tooltip test here><run command:/pdapi debug> &8➳ &e/Pdapi debug &8, &7Click here to toggle debug mode.<reset>"
			send "&f"
			send "&c▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ &c&lPlayerData API&c ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
		if arg 1 is "debug":
			if {PDAPI::Debug} is not set:
				set {PDAPI::Debug} to true
				send action bar "&cDebug Mode enabled" to player
			else:
				delete {PDAPI::Debug}
				send action bar "&cDebug Mode disabled" to player
